{"version":3,"sources":["components/Following.js","components/Profile.js","components/Comments.js","components/Tweet.js","components/TweetBox.js","components/Uploader.js","components/NewTweetBox.js","components/SearchItems.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["Following","props","react_default","a","createElement","key","index","className","src","following","profilePicture","alt","username","tweets","length","unfollow","onClick","Profile","Fragment","id","usernameShort","tweetCounter","map","components_Following","followers","Comments","comment","library","add","faEyeSlash","faComments","Tweet","comments","useEffect","formated","tweet","split","err","console","log","setComment","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","commentsOpen","setCommentsOpen","_useState5","_useState6","inputValue","setInputValue","_useState7","_useState8","posted","setPosted","timestamp_default","time","timesOfTweet","autoUpdate","type","placeholder","value","onChange","e","target","onKeyDown","event","keyCode","setTimeout","react_fontawesome_index_es","icon","size","components_Comments","TweetBox","components_Tweet","datakey","timesOfTweets","owner_id","Uploader","_this","this","widget","uploadcare","Widget","uploader","_this$props","onUploadComplete","files","onDialogOpen","dialog","reject","jQuery","when","apply","cancel","widgetElement","next","data","inputElement","remove","attributes","assign","_this2","getInputAttributes","ref","input","Component","newTimesSorted","NewTweetBox","array","timesSorted","push","item","times","sort","b","toLowerCase","replace","SearchItems","setFollowing","i","checkIfFollowing","follow","SearchResults","searchResultsArray","components_SearchItems","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","tweetValue","usernameValue","search","searchEmpty","home","usernameInput","bind","assertThisInitialized","usernameInputKeyHandler","handleTweetChange","handleTweetKeyDown","post","updateDb","uploadPicture","getSearch","clearSearch","searchResults","setIntitalState","checkForChanges","checkForOwnChanges","client","Stitch","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","user","auth","loginWithCredential","AnonymousCredential","setState","alert","newTweet","newTweetTime","Date","getTime","unshift","collection","updateOne","$set","upsert","catch","error","info","uuid","arg","find","RegExp","toArray","then","results","toConsumableArray","newFollowing","filter","el","_this3","j","_this4","findOne","docs","_this5","indexOf","_this6","list","$in","resultsSorted","followingSorted","_this7","_this8","interval","setInterval","selfInterval","followersInterval","prevProps","prevState","clearInterval","_this9","htmlFor","components_SearchResults","components_Profile","components_Uploader","name","data-tabs","file","progress","done","components_TweetBox","components_NewTweetBox","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4a30d6b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/following.css\";\r\nconst Following = props => {\r\n  return (\r\n    <div key={props.index} className='profile-following-item'>\r\n      <img\r\n        className='profile-following-image'\r\n        src={props.following.profilePicture}\r\n        alt='following profile'\r\n      />\r\n      <p className='profile-following-username'>{props.following.username}</p>\r\n      <div className='profile-following-modal'>\r\n        <img src={props.following.profilePicture} alt='following profile' />\r\n        <div className='profile-following-modal-info'>\r\n          <p className='profile-following-modal-p'>\r\n            {props.following.username}\r\n          </p>\r\n          <p className='profile-following-modal-p'>\r\n            {\" \"}\r\n            Tweets: {props.following.tweets.length}\r\n          </p>\r\n          {props.unfollow ? (\r\n            <button\r\n              className='profile-following-unfollow'\r\n              onClick={() => props.unfollow(props.following)}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Following;\r\n","import React from \"react\";\r\nimport \"../styles/profile.css\";\r\nimport Following from \"./Following.js\";\r\nconst Profile = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='profile-flex'>\r\n        <div className='profile-image'>\r\n          <span className='change-picture'>Change Picture:</span>\r\n          <img id='profile-image' src={props.profilePicture} alt='profile' />\r\n        </div>\r\n        <div className='profile-info'>\r\n          <div>{props.username}</div>\r\n          <div>{props.usernameShort}</div>\r\n          <div>Tweets: {props.tweetCounter}</div>\r\n        </div>\r\n      </div>\r\n      <div className='profile-following'>\r\n        <p>Following: </p>\r\n        {props.following.map((following, index) => (\r\n          <Following\r\n            key={index}\r\n            following={following}\r\n            index={index}\r\n            unfollow={props.unfollow}\r\n          />\r\n        ))}\r\n        <p>Followers: </p>\r\n        {props.followers.map((followers, index) => (\r\n          <Following key={index} following={followers} index={index} />\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nconst Comments = props => {\r\n  return <p>{props.comment}</p>;\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Timestamp from \"react-timestamp\";\r\nimport Comments from \"./Comments.js\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEyeSlash, faComments } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../styles/tweet.css\";\r\nlibrary.add(faEyeSlash, faComments);\r\nconst Tweet = props => {\r\n  let comments = [];\r\n  useEffect(() => {\r\n    let formated = [];\r\n    formated[0] = props.tweet;\r\n    try {\r\n      if (formated[0].length === 1) {\r\n        comments = formated[0][0].split(\"&?\");\r\n      } else {\r\n        comments = formated[0].split(\"&?\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setComment(comments);\r\n  }, [props.tweet]);\r\n  const [comment, setComment] = useState([]);\r\n  const [commentsOpen, setCommentsOpen] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [posted, setPosted] = useState(false);\r\n\r\n  function clearComment(key) {\r\n    if (key === 13) {\r\n      setInputValue(\"\");\r\n      setPosted(true);\r\n    }\r\n    setTimeout(function() {\r\n      setPosted(false);\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <li className='list-item'>\r\n        <div className='tweet-picture-container'>\r\n          <img src={props.profilePicture} alt='profile' />\r\n        </div>\r\n        <div className='tweet-content'>\r\n          <span className='tweet-username'>{props.usernameShort}</span>\r\n          <Timestamp\r\n            className='tweet-time'\r\n            time={props.timesOfTweet}\r\n            autoUpdate\r\n          />\r\n          <p>{comment[0]}</p>\r\n        </div>\r\n      </li>\r\n      <div className='comments-input'>\r\n        <input\r\n          type='text'\r\n          placeholder='Please enter your comment and press Enter'\r\n          className={\r\n            commentsOpen ? \"comments-input-open\" : \"comments-input-closed\"\r\n          }\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n          onKeyDown={event => {\r\n            props.comment(props, inputValue, event.keyCode);\r\n            clearComment(event.keyCode);\r\n          }}\r\n        />\r\n        <div\r\n          className={\r\n            posted ? \"posted-indicator posted\" : \"posted-indicator not-posted\"\r\n          }\r\n        >\r\n          <span>Posted</span>\r\n        </div>\r\n        {commentsOpen ? (\r\n          <button\r\n            className='open-comments-button --opened-comments'\r\n            onClick={() => setCommentsOpen(!commentsOpen)}\r\n          >\r\n            <FontAwesomeIcon icon='eye-slash' size='lg' />\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className='open-comments-button --closed-comments'\r\n            onClick={() => setCommentsOpen(!commentsOpen)}\r\n          >\r\n            <FontAwesomeIcon icon='comments' size='lg' />\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          commentsOpen ? \"comments comments-open\" : \"comments comments-closed\"\r\n        }\r\n      >\r\n        {comment.map((comment, index) =>\r\n          index === 0 ? null : (\r\n            <div key={index}>\r\n              <Comments comment={comment} />\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../styles/tweetbox.css\";\r\n\r\nconst TweetBox = props => {\r\n  return (\r\n    <div className='tweetbox-container'>\r\n      <ul>\r\n        {props.tweets.map((tweet, index) => (\r\n          <Tweet\r\n            key={index}\r\n            datakey={index}\r\n            length={props.tweets.length}\r\n            tweet={tweet}\r\n            timesOfTweet={props.timesOfTweets[index]}\r\n            usernameShort={props.usernameShort}\r\n            profilePicture={props.profilePicture}\r\n            comment={props.comment}\r\n            owner_id={props.owner_id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetBox;\r\n","import React, { Component } from \"react\";\r\nimport uploadcare from \"uploadcare-widget\";\r\n\r\nclass Uploader extends Component {\r\n  componentDidMount() {\r\n    const widget = uploadcare.Widget(this.uploader);\r\n    const { value, onChange, onUploadComplete } = this.props;\r\n\r\n    if (typeof value !== \"undefined\") {\r\n      widget.value(value);\r\n    }\r\n    if (typeof onChange === \"function\") {\r\n      widget.onChange(files => {\r\n        if (files) {\r\n          this.files =\r\n            this.files && this.files.files ? this.files.files() : [this.files];\r\n        } else {\r\n          this.files = null;\r\n        }\r\n\r\n        onChange(files);\r\n      });\r\n    }\r\n    if (typeof onUploadComplete === \"function\") {\r\n      widget.onUploadComplete(onUploadComplete);\r\n    }\r\n    widget.onDialogOpen(dialog => (this.dialog = dialog));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.dialog) {\r\n      this.dialog.reject();\r\n    }\r\n    if (this.files) {\r\n      uploadcare.jQuery.when.apply(null, this.files).cancel();\r\n    }\r\n\r\n    const widgetElement = uploadcare\r\n      .jQuery(this.uploader)\r\n      .next(\".uploadcare--widget\");\r\n    const widget = widgetElement.data(\"uploadcareWidget\");\r\n\r\n    if (widget && widget.inputElement === this.uploader) {\r\n      widgetElement.remove();\r\n    }\r\n  }\r\n\r\n  getInputAttributes() {\r\n    const attributes = Object.assign({}, this.props);\r\n\r\n    delete attributes.value;\r\n    delete attributes.onChange;\r\n    delete attributes.onUploadComplete;\r\n\r\n    return attributes;\r\n  }\r\n\r\n  render() {\r\n    const attributes = this.getInputAttributes();\r\n\r\n    return (\r\n      <input\r\n        type='hidden'\r\n        ref={input => (this.uploader = input)}\r\n        {...attributes}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Uploader;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../styles/tweetbox.css\";\r\nlet newTimesSorted = [];\r\n\r\nconst NewTweetBox = props => {\r\n  const sort = () => {\r\n    let array = [];\r\n    let timesSorted = [];\r\n    array.push(props.tweets);\r\n    array.map(item => {\r\n      item.map(times => {\r\n        times.timesOfTweets.map((timesOfTweets, index) => {\r\n          timesSorted.push([\r\n            timesOfTweets,\r\n            times.tweets[index],\r\n            times.username,\r\n            times.profilePicture,\r\n            times.owner_id\r\n          ]);\r\n          return (newTimesSorted = timesSorted.sort(function(a, b) {\r\n            return b[0] - a[0];\r\n          }));\r\n        });\r\n        return null;\r\n      });\r\n      return null;\r\n    });\r\n  };\r\n  sort();\r\n\r\n  if (props.tweets.length !== 0) {\r\n    return (\r\n      <div className='tweetbox-container'>\r\n        <ul>\r\n          {newTimesSorted.map((item, index) => (\r\n            <Tweet\r\n              datakey={index}\r\n              key={index}\r\n              usernameShort={\"@\" + item[2].toLowerCase().replace(/\\s/g, \"\")}\r\n              timesOfTweet={item[0]}\r\n              profilePicture={item[3]}\r\n              tweet={item[1]}\r\n              comment={props.comment}\r\n              owner_id={item[4]}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default NewTweetBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/searchitems.css\";\r\n\r\nconst SearchItems = props => {\r\n  const [following, setFollowing] = useState(false);\r\n\r\n  function checkIfFollowing() {\r\n    for (let i = 0; i < props.following.length; i++) {\r\n      if (props.id === props.following[i].owner_id) {\r\n        setFollowing(true);\r\n        break;\r\n      } else setFollowing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkIfFollowing();\r\n  }, [props.item]);\r\n\r\n  return (\r\n    <div className='search-item-with-button'>\r\n      <div className='search-item-container'>\r\n        <img\r\n          className='search-item-img'\r\n          src={props.item.profilePicture}\r\n          alt='profile'\r\n        />\r\n        <div className='search-item-username'>\r\n          <p>{props.item.username}</p>\r\n          <p>{\"@\" + props.item.username.toLowerCase().replace(/\\s/g, \"\")}</p>\r\n          <p>Tweets: {props.item.tweets.length}</p>\r\n        </div>\r\n      </div>\r\n      {following ? (\r\n        <button\r\n          className='unfollow'\r\n          onClick={() => {\r\n            props.unfollow(props.item);\r\n            setFollowing(false);\r\n          }}\r\n        >\r\n          Unfollow\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className='follow'\r\n          onClick={() => {\r\n            props.follow(props.item);\r\n            setFollowing(true);\r\n          }}\r\n        >\r\n          Follow\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItems;\r\n","import React from \"react\";\r\nimport SearchItems from \"./SearchItems.js\";\r\nimport \"../styles/searchresults.css\";\r\n\r\nconst SearchResults = props => {\r\n  return (\r\n    <ul className='search-list'>\r\n      {props.searchResultsArray.map((item, index) => (\r\n        <li className='search-list-item' key={index}>\r\n          <SearchItems\r\n            item={item}\r\n            id={item.owner_id}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            following={props.following}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./components/Profile.js\";\r\nimport TweetBox from \"./components/TweetBox.js\";\r\nimport Uploader from \"./components/Uploader\";\r\nimport NewTweetBox from \"./components/NewTweetBox.js\";\r\nimport SearchResults from \"./components/SearchResults.js\";\r\nimport {\r\n  Stitch,\r\n  RemoteMongoClient,\r\n  AnonymousCredential\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport \"./styles/app.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.usernameInput = this.usernameInput.bind(this);\r\n    this.usernameInputKeyHandler = this.usernameInputKeyHandler.bind(this);\r\n    this.handleTweetChange = this.handleTweetChange.bind(this);\r\n    this.handleTweetKeyDown = this.handleTweetKeyDown.bind(this);\r\n    this.post = this.post.bind(this);\r\n    this.updateDb = this.updateDb.bind(this);\r\n    this.uploadPicture = this.uploadPicture.bind(this);\r\n    this.getSearch = this.getSearch.bind(this);\r\n    this.clearSearch = this.clearSearch.bind(this);\r\n    this.searchResults = this.searchResults.bind(this);\r\n    this.follow = this.follow.bind(this);\r\n    this.unfollow = this.unfollow.bind(this);\r\n    this.followers = this.followers.bind(this);\r\n    this.setIntitalState = this.setIntitalState.bind(this);\r\n    this.comment = this.comment.bind(this);\r\n    this.checkForChanges = this.checkForChanges.bind(this);\r\n    this.checkForOwnChanges = this.checkForOwnChanges.bind(this);\r\n    this.client = Stitch.initializeDefaultAppClient(\"twitter-clone-hgeer\");\r\n    this.db = this.client\r\n      .getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\")\r\n      .db(\"test\");\r\n    this.user = this.client.auth.loginWithCredential(new AnonymousCredential());\r\n  }\r\n\r\n  state = {\r\n    profilePicture: \"logo.png\",\r\n    username: \"\",\r\n    timesOfTweets: [],\r\n    tweets: [],\r\n    tweetValue: \"\",\r\n    usernameValue: \"\",\r\n    search: \"\",\r\n    searchEmpty: true,\r\n    searchResultsArray: [],\r\n    following: [],\r\n    followers: [],\r\n    home: true,\r\n    owner_id: \"\"\r\n  };\r\n  usernameInput(event) {\r\n    this.setState({\r\n      usernameValue: event.target.value\r\n    });\r\n  }\r\n  usernameInputKeyHandler(event) {\r\n    if (event.key === \"Enter\") {\r\n      if (!event.target.value) {\r\n        alert(\"name can't be empty\");\r\n      }\r\n      this.setState({\r\n        username: this.state.usernameValue\r\n      });\r\n      this.updateDb();\r\n      console.log(this.client.auth.user.id);\r\n      this.setState({\r\n        owner_id: this.client.auth.user.id\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTweetChange(event) {\r\n    this.setState({\r\n      tweetValue: event.target.value\r\n    });\r\n  }\r\n  handleTweetKeyDown(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.post();\r\n    }\r\n  }\r\n  post() {\r\n    if (this.state.tweetValue !== \"\") {\r\n      let newTweet = this.state.tweets;\r\n      let newTweetTime = this.state.timesOfTweets;\r\n      let date = new Date();\r\n      let time = date.getTime() / 1000;\r\n      newTweetTime.unshift(time);\r\n      newTweet.unshift(this.state.tweetValue);\r\n      this.setState({\r\n        tweets: newTweet,\r\n        timesOfTweets: newTweetTime,\r\n        tweetValue: \"\"\r\n      });\r\n      this.updateDb();\r\n    }\r\n  }\r\n  updateDb() {\r\n    this.db\r\n      .collection(\"test\")\r\n      .updateOne(\r\n        { owner_id: this.client.auth.user.id },\r\n        {\r\n          $set: {\r\n            profilePicture: this.state.profilePicture,\r\n            username: this.state.usernameValue || this.state.username,\r\n            tweets: this.state.tweets,\r\n            timesOfTweets: this.state.timesOfTweets,\r\n            following: this.state.following,\r\n            followers: this.state.followers\r\n          }\r\n        },\r\n        { upsert: true }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  uploadPicture(info) {\r\n    this.db\r\n      .collection(\"test\")\r\n      .updateOne(\r\n        { owner_id: this.client.auth.user.id },\r\n        {\r\n          $set: {\r\n            profilePicture:\r\n              \"https://ucarecdn.com/\" + info.uuid + \"/-/resize/150x/\"\r\n          }\r\n        },\r\n        this.setState({\r\n          profilePicture:\r\n            \"https://ucarecdn.com/\" + info.uuid + \"/-/resize/150x/\"\r\n        }),\r\n        { upsert: true }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getSearch(event) {\r\n    if (event.target.value !== \"\") {\r\n      this.setState({\r\n        searchEmpty: false\r\n      });\r\n      this.searchResults(event.target.value);\r\n    } else {\r\n      this.setState({\r\n        searchEmpty: true\r\n      });\r\n    }\r\n    this.setState({\r\n      search: event.target.value\r\n    });\r\n  }\r\n  clearSearch() {\r\n    this.setState({\r\n      searchEmpty: true,\r\n      search: \"\"\r\n    });\r\n  }\r\n  searchResults(arg) {\r\n    this.db\r\n      .collection(\"test\")\r\n      .find({ username: new RegExp(arg, \"i\") })\r\n      .toArray()\r\n      .then(results => {\r\n        if (results.length > 0) {\r\n          this.setState({\r\n            searchResultsArray: [...results]\r\n          });\r\n        }\r\n      });\r\n  }\r\n  follow(item) {\r\n    let newFollowing = this.state.following;\r\n    newFollowing.push(item);\r\n    this.setState({\r\n      following: [...newFollowing]\r\n    });\r\n  }\r\n  unfollow(item) {\r\n    let newFollowing = this.state.following.filter(function(el) {\r\n      return el.owner_id !== item.owner_id;\r\n    });\r\n    if (newFollowing.length === 0) {\r\n      this.setState({\r\n        following: []\r\n      });\r\n    }\r\n    this.setState({\r\n      following: [...newFollowing]\r\n    });\r\n  }\r\n  followers() {\r\n    let followers = [];\r\n    console.log(\"followers\");\r\n    this.db\r\n      .collection(\"test\")\r\n      .find({})\r\n      .toArray()\r\n      .then(results => {\r\n        for (let i = 0; i < results.length; i++) {\r\n          if (results[i].following.length > 0) {\r\n            for (let j = 0; j < results[i].following.length; j++) {\r\n              if (\r\n                results[i].following[j].owner_id === this.client.auth.user.id\r\n              ) {\r\n                followers.push(results[i]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        //console.log(followers, this.state.followers);\r\n        for (let i = 0; i < followers.length; i++) {\r\n          if (followers.length === this.state.followers.length) {\r\n            if (\r\n              followers[i].profilePicture !==\r\n              this.state.followers[i].profilePicture\r\n            ) {\r\n              this.setState({\r\n                followers: followers\r\n              });\r\n            }\r\n          }\r\n        }\r\n        console.log(followers);\r\n        if (followers.length !== this.state.followers.length) {\r\n          this.setState({\r\n            followers: followers\r\n          });\r\n        }\r\n      });\r\n  }\r\n  setIntitalState() {\r\n    this.user\r\n      .then(() =>\r\n        this.db\r\n          .collection(\"test\")\r\n          .findOne({ owner_id: this.client.auth.user.id })\r\n      )\r\n      .then(docs => {\r\n        if (docs) {\r\n          this.setState({\r\n            profilePicture: docs.profilePicture || \"logo.png\",\r\n            tweets: docs.tweets,\r\n            timesOfTweets: docs.timesOfTweets,\r\n            username: docs.username,\r\n            following: docs.following || [],\r\n            followers: docs.followers || [],\r\n            owner_id: docs.owner_id\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  comment(item, value, key) {\r\n    if (key === 13 && value !== \"\") {\r\n      this.db\r\n        .collection(\"test\")\r\n        .findOne({ owner_id: item.owner_id })\r\n        .then(docs => {\r\n          let index = docs.timesOfTweets.indexOf(item.timesOfTweet);\r\n          let tweets = docs.tweets;\r\n          tweets[index] =\r\n            tweets[index] +\r\n            \"&?\" +\r\n            value +\r\n            \" :\" +\r\n            \"@\" +\r\n            this.state.username.toLowerCase().replace(/\\s/g, \"\");\r\n          this.db\r\n            .collection(\"test\")\r\n            .updateOne(\r\n              { owner_id: item.owner_id },\r\n              {\r\n                $set: {\r\n                  tweets: tweets\r\n                }\r\n              },\r\n              { upsert: true }\r\n            )\r\n            .catch(err => {\r\n              console.error(err);\r\n            });\r\n          if (this.state.home) {\r\n            console.log(this.state.tweets, tweets);\r\n            this.setState({\r\n              tweets: tweets\r\n            });\r\n          } else {\r\n            this.updateDb();\r\n            this.checkForChanges();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n  checkForChanges() {\r\n    let list = [];\r\n    for (let i = 0; i < this.state.following.length; i++) {\r\n      list.push(this.state.following[i].owner_id);\r\n    }\r\n    this.db\r\n      .collection(\"test\")\r\n      .find({\r\n        owner_id: {\r\n          $in: list\r\n        }\r\n      })\r\n      .toArray()\r\n      .then(results => {\r\n        let resultsSorted = results.sort((a, b) =>\r\n          a.owner_id > b.owner_id ? 1 : b.owner_id > a.owner_id ? -1 : 0\r\n        );\r\n        let followingSorted = this.state.following.sort((a, b) =>\r\n          a.owner_id > b.owner_id ? 1 : b.owner_id > a.owner_id ? -1 : 0\r\n        );\r\n        try {\r\n          for (let i = 0; i < followingSorted.length; i++) {\r\n            for (let j = 0; j < resultsSorted[i].tweets.length; j++) {\r\n              if (\r\n                resultsSorted[i].tweets[j] !== followingSorted[i].tweets[j] ||\r\n                resultsSorted[i].profilePicture !==\r\n                  followingSorted[i].profilePicture\r\n              ) {\r\n                this.setState({\r\n                  following: resultsSorted\r\n                });\r\n                this.updateDb();\r\n              }\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      });\r\n  }\r\n  checkForOwnChanges() {\r\n    if (this.state.username) {\r\n      this.user\r\n        .then(() =>\r\n          this.db\r\n            .collection(\"test\")\r\n            .findOne({ owner_id: this.client.auth.user.id })\r\n        )\r\n        .then(docs => {\r\n          for (let i = 0; i < docs.tweets.length; i++) {\r\n            if (docs.tweets[i] !== this.state.tweets[i]) {\r\n              this.setState({\r\n                tweets: docs.tweets\r\n              });\r\n              this.updateDb();\r\n            } else break;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setIntitalState();\r\n    this.interval = setInterval(() => this.checkForChanges(), 2500);\r\n    this.selfInterval = setInterval(() => this.checkForOwnChanges(), 2500);\r\n    this.followersInterval = setInterval(() => this.followers(), 5000);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.following !== prevState.following) {\r\n      this.updateDb();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval, this.selfInterval, this.followersInterval);\r\n  }\r\n  render() {\r\n    if (this.state.username === \"\") {\r\n      return (\r\n        <div className='login-container animation'>\r\n          <div className='logo-container'>\r\n            <img src='logo.png' alt='logo' />\r\n          </div>\r\n          <p>\r\n            Welcome to Twudder (like a twitter, but with no annoying tweets)\r\n          </p>\r\n          <div className='username-input-container'>\r\n            <input\r\n              id='username-input'\r\n              type='text'\r\n              value={this.state.usernameValue}\r\n              onChange={this.usernameInput}\r\n              onKeyDown={this.usernameInputKeyHandler}\r\n            />\r\n            <label className='username-input-label' htmlFor='username-input'>\r\n              Please enter your name and press Enter\r\n            </label>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className='search-container'>\r\n            <div className='search-input-container'>\r\n              <input\r\n                id='search'\r\n                type='text'\r\n                value={this.state.search}\r\n                onChange={this.getSearch}\r\n                placeholder='Search...'\r\n              />\r\n              <button onClick={this.clearSearch}>Clear</button>\r\n            </div>\r\n            {!this.state.searchEmpty ? (\r\n              <SearchResults\r\n                searchResultsArray={this.state.searchResultsArray}\r\n                following={this.state.following}\r\n                follow={this.follow}\r\n                unfollow={this.unfollow}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className='container' onClick={() => this.clearSearch()}>\r\n            <div className='profile-container'>\r\n              <Profile\r\n                profilePicture={this.state.profilePicture}\r\n                username={this.state.username}\r\n                usernameShort={\r\n                  \"@\" + this.state.username.toLowerCase().replace(/\\s/g, \"\")\r\n                }\r\n                tweetCounter={this.state.tweets.length}\r\n                following={this.state.following}\r\n                followers={this.state.followers}\r\n                unfollow={this.unfollow}\r\n              />\r\n              <div className='uploader'>\r\n                <label htmlFor='file'>Change Picture:</label>{\" \"}\r\n                <Uploader\r\n                  id='file'\r\n                  name='file'\r\n                  data-tabs='file camera'\r\n                  onChange={file => {\r\n                    console.log(\"File changed: \", file);\r\n                    if (file) {\r\n                      file.progress(info =>\r\n                        console.log(\"File progress: \", info.progress)\r\n                      );\r\n                      file.done(info => console.log(\"File uploaded: \", info));\r\n                    }\r\n                  }}\r\n                  onUploadComplete={info => this.uploadPicture(info)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='buttons-and-tweets'>\r\n              <div className='buttons-container'>\r\n                <button\r\n                  className={this.state.home ? \"button --active\" : \"button\"}\r\n                  onClick={() => this.setState({ home: true })}\r\n                >\r\n                  Home\r\n                </button>\r\n                <button\r\n                  className={this.state.home ? \"button\" : \"button --active\"}\r\n                  onClick={() => this.setState({ home: false })}\r\n                >\r\n                  Feed\r\n                </button>\r\n              </div>\r\n              <div className='tweets-container'>\r\n                {this.state.home ? (\r\n                  <div className='post-container'>\r\n                    <input\r\n                      id='post'\r\n                      type='text'\r\n                      value={this.state.tweetValue}\r\n                      onChange={this.handleTweetChange}\r\n                      onKeyDown={this.handleTweetKeyDown}\r\n                    />\r\n                    <label className='post-label' htmlFor='post'>\r\n                      Please enter your tweet and press Enter\r\n                    </label>\r\n                  </div>\r\n                ) : null}\r\n\r\n                {this.state.home ? (\r\n                  <TweetBox\r\n                    tweets={this.state.tweets}\r\n                    timesOfTweets={this.state.timesOfTweets}\r\n                    profilePicture={this.state.profilePicture}\r\n                    usernameShort={\r\n                      \"@\" + this.state.username.toLowerCase().replace(/\\s/g, \"\")\r\n                    }\r\n                    comment={this.comment}\r\n                    owner_id={this.state.owner_id}\r\n                  />\r\n                ) : (\r\n                  <NewTweetBox\r\n                    tweets={this.state.following}\r\n                    comment={this.comment}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}