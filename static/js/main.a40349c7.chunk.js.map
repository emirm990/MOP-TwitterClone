{"version":3,"sources":["components/Profile.js","components/Tweet.js","components/TweetBox.js","components/Uploader.js","components/NewTweetBox.js","components/SearchItems.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["Profile","props","react_default","a","createElement","className","id","src","profilePicture","alt","username","usernameShort","tweetCounter","Tweet","timestamp_default","time","timesOfTweet","autoUpdate","tweet","TweetBox","tweets","map","index","components_Tweet","key","datakey","length","timesOfTweets","Uploader","_this","this","widget","uploadcare","Widget","uploader","_this$props","value","onChange","onUploadComplete","files","onDialogOpen","dialog","reject","jQuery","when","apply","cancel","widgetElement","next","data","inputElement","remove","attributes","Object","assign","_this2","getInputAttributes","type","ref","input","Component","newTimesSorted","NewTweetBox","array","timesSorted","push","item","times","sort","b","toLowerCase","replace","SearchItems","_useState","useState","_useState2","slicedToArray","following","setFollowing","useEffect","i","owner_id","checkIfFollowing","onClick","unfollow","follow","SearchResults","searchResultsArray","components_SearchItems","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","tweetValue","usernameValue","search","searchEmpty","home","usernameInput","bind","assertThisInitialized","usernameInputKeyHandler","handleTweetChange","handleTweetKeyDown","post","updateDb","uploadPicture","getSearch","clearSearch","searchResults","setIntitalState","client","Stitch","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","user","auth","loginWithCredential","AnonymousCredential","event","setState","target","alert","newTweet","newTweetTime","Date","getTime","unshift","collection","updateOne","$set","upsert","catch","err","console","error","info","uuid","arg","find","RegExp","toArray","then","results","toConsumableArray","log","newFollowing","filter","el","_this3","findOne","docs","prevProps","prevState","_this4","onKeyDown","htmlFor","Fragment","placeholder","components_SearchResults","components_Profile","components_Uploader","name","data-tabs","file","progress","done","components_TweetBox","components_NewTweetBox","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a40349c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/profile.css\";\r\nconst Profile = props => {\r\n  return (\r\n    <div className='profile-flex'>\r\n      <div className='profile-image'>\r\n        <img id='profile-image' src={props.profilePicture} alt='profile' />\r\n      </div>\r\n      <div className='profile-info'>\r\n        <div>{props.username}</div>\r\n        <div>{props.usernameShort}</div>\r\n        <div>Tweets: {props.tweetCounter}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Timestamp from \"react-timestamp\";\r\nimport \"../styles/tweet.css\";\r\n\r\nconst Tweet = props => {\r\n  return (\r\n    <li className='list-item'>\r\n      <div className='tweet-picture-container'>\r\n        <img src={props.profilePicture} alt='profile' />\r\n      </div>\r\n      <div className='tweet-content'>\r\n        <span className='tweet-username'>{props.usernameShort}</span>\r\n        <Timestamp\r\n          className='tweet-time'\r\n          time={props.timesOfTweet}\r\n          autoUpdate\r\n        />\r\n        <p>{props.tweet}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../styles/tweetbox.css\";\r\n\r\nconst TweetBox = props => {\r\n  return (\r\n    <div className='tweetbox-container'>\r\n      <ul>\r\n        {props.tweets.map((tweet, index) => (\r\n          <Tweet\r\n            key={index}\r\n            datakey={index}\r\n            length={props.tweets.length}\r\n            tweet={tweet}\r\n            timesOfTweet={props.timesOfTweets[index]}\r\n            usernameShort={props.usernameShort}\r\n            profilePicture={props.profilePicture}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetBox;\r\n","import React, { Component } from \"react\";\r\nimport uploadcare from \"uploadcare-widget\";\r\n\r\nclass Uploader extends Component {\r\n  componentDidMount() {\r\n    const widget = uploadcare.Widget(this.uploader);\r\n    const { value, onChange, onUploadComplete } = this.props;\r\n\r\n    if (typeof value !== \"undefined\") {\r\n      widget.value(value);\r\n    }\r\n    if (typeof onChange === \"function\") {\r\n      widget.onChange(files => {\r\n        if (files) {\r\n          this.files =\r\n            this.files && this.files.files ? this.files.files() : [this.files];\r\n        } else {\r\n          this.files = null;\r\n        }\r\n\r\n        onChange(files);\r\n      });\r\n    }\r\n    if (typeof onUploadComplete === \"function\") {\r\n      widget.onUploadComplete(onUploadComplete);\r\n    }\r\n    widget.onDialogOpen(dialog => (this.dialog = dialog));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.dialog) {\r\n      this.dialog.reject();\r\n    }\r\n    if (this.files) {\r\n      uploadcare.jQuery.when.apply(null, this.files).cancel();\r\n    }\r\n\r\n    const widgetElement = uploadcare\r\n      .jQuery(this.uploader)\r\n      .next(\".uploadcare--widget\");\r\n    const widget = widgetElement.data(\"uploadcareWidget\");\r\n\r\n    if (widget && widget.inputElement === this.uploader) {\r\n      widgetElement.remove();\r\n    }\r\n  }\r\n\r\n  getInputAttributes() {\r\n    const attributes = Object.assign({}, this.props);\r\n\r\n    delete attributes.value;\r\n    delete attributes.onChange;\r\n    delete attributes.onUploadComplete;\r\n\r\n    return attributes;\r\n  }\r\n\r\n  render() {\r\n    const attributes = this.getInputAttributes();\r\n\r\n    return (\r\n      <input\r\n        type='hidden'\r\n        ref={input => (this.uploader = input)}\r\n        {...attributes}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Uploader;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../styles/tweetbox.css\";\r\nlet newTimesSorted = [];\r\n\r\nconst NewTweetBox = props => {\r\n  const sort = () => {\r\n    let array = [];\r\n    let timesSorted = [];\r\n    array.push(props.tweets);\r\n    array.map(item => {\r\n      item.map(times => {\r\n        times.timesOfTweets.map((timesOfTweets, index) => {\r\n          timesSorted.push([\r\n            timesOfTweets,\r\n            times.tweets[index],\r\n            times.username,\r\n            times.profilePicture\r\n          ]);\r\n          return (newTimesSorted = timesSorted.sort(function(a, b) {\r\n            return b[0] - a[0];\r\n          }));\r\n        });\r\n        return null;\r\n      });\r\n      return null;\r\n    });\r\n  };\r\n  sort();\r\n\r\n  if (props.tweets.length !== 0) {\r\n    return (\r\n      <div className='tweetbox-container'>\r\n        <ul>\r\n          {newTimesSorted.map((item, index) => (\r\n            <Tweet\r\n              key={index}\r\n              usernameShort={\"@\" + item[2].toLowerCase().replace(/\\s/g, \"\")}\r\n              timesOfTweet={item[0]}\r\n              profilePicture={item[3]}\r\n              tweet={item[1]}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default NewTweetBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/searchitems.css\";\r\n\r\nconst SearchItems = props => {\r\n  const [following, setFollowing] = useState(false);\r\n\r\n  function checkIfFollowing() {\r\n    for (let i = 0; i < props.following.length; i++) {\r\n      if (props.id === props.following[i].owner_id) {\r\n        setFollowing(true);\r\n        break;\r\n      } else setFollowing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkIfFollowing();\r\n  }, [props.item]);\r\n\r\n  return (\r\n    <div className='search-item-with-button'>\r\n      <div className='search-item-container'>\r\n        <img\r\n          className='search-item-img'\r\n          src={props.item.profilePicture}\r\n          alt='profile'\r\n        />\r\n        <div className='search-item-username'>\r\n          <p>{props.item.username}</p>\r\n          <p>{\"@\" + props.item.username.toLowerCase().replace(/\\s/g, \"\")}</p>\r\n          <p>Tweets: {props.item.tweets.length}</p>\r\n        </div>\r\n      </div>\r\n      {following ? (\r\n        <button\r\n          className='unfollow'\r\n          onClick={() => {\r\n            props.unfollow(props.item);\r\n            setFollowing(false);\r\n          }}\r\n        >\r\n          Unfollow\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className='follow'\r\n          onClick={() => {\r\n            props.follow(props.item);\r\n            setFollowing(true);\r\n          }}\r\n        >\r\n          Follow\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItems;\r\n","import React from \"react\";\r\nimport SearchItems from \"./SearchItems.js\";\r\nimport \"../styles/searchresults.css\";\r\n\r\nconst SearchResults = props => {\r\n  return (\r\n    <ul className='search-list'>\r\n      {props.searchResultsArray.map((item, index) => (\r\n        <li className='search-list-item' key={index}>\r\n          <SearchItems\r\n            item={item}\r\n            id={item.owner_id}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            following={props.following}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./components/Profile.js\";\r\nimport TweetBox from \"./components/TweetBox.js\";\r\nimport Uploader from \"./components/Uploader\";\r\nimport NewTweetBox from \"./components/NewTweetBox.js\";\r\nimport SearchResults from \"./components/SearchResults.js\";\r\nimport {\r\n  Stitch,\r\n  RemoteMongoClient,\r\n  AnonymousCredential\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport \"./styles/app.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.usernameInput = this.usernameInput.bind(this);\r\n    this.usernameInputKeyHandler = this.usernameInputKeyHandler.bind(this);\r\n    this.handleTweetChange = this.handleTweetChange.bind(this);\r\n    this.handleTweetKeyDown = this.handleTweetKeyDown.bind(this);\r\n    this.post = this.post.bind(this);\r\n    this.updateDb = this.updateDb.bind(this);\r\n    this.uploadPicture = this.uploadPicture.bind(this);\r\n    this.getSearch = this.getSearch.bind(this);\r\n    this.clearSearch = this.clearSearch.bind(this);\r\n    this.searchResults = this.searchResults.bind(this);\r\n    this.follow = this.follow.bind(this);\r\n    this.unfollow = this.unfollow.bind(this);\r\n    this.setIntitalState = this.setIntitalState.bind(this);\r\n\r\n    this.client = Stitch.initializeDefaultAppClient(\"twitter-clone-hgeer\");\r\n    this.db = this.client\r\n      .getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\")\r\n      .db(\"twitter-clone\");\r\n    this.user = this.client.auth.loginWithCredential(new AnonymousCredential());\r\n  }\r\n  state = {\r\n    profilePicture: \"logo.png\",\r\n    username: \"\",\r\n    timesOfTweets: [],\r\n    tweets: [],\r\n    tweetValue: \"\",\r\n    usernameValue: \"\",\r\n    search: \"\",\r\n    searchEmpty: true,\r\n    searchResultsArray: [],\r\n    following: [],\r\n    home: true\r\n  };\r\n\r\n  usernameInput(event) {\r\n    this.setState({\r\n      usernameValue: event.target.value\r\n    });\r\n  }\r\n  usernameInputKeyHandler(event) {\r\n    if (event.key === \"Enter\") {\r\n      if (!event.target.value) {\r\n        alert(\"name can't be empty\");\r\n      }\r\n      this.setState({\r\n        username: this.state.usernameValue\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTweetChange(event) {\r\n    this.setState({\r\n      tweetValue: event.target.value\r\n    });\r\n  }\r\n  handleTweetKeyDown(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.post();\r\n    }\r\n  }\r\n  post() {\r\n    if (this.state.tweetValue !== \"\") {\r\n      let newTweet = this.state.tweets;\r\n      let newTweetTime = this.state.timesOfTweets;\r\n      let date = new Date();\r\n      let time = date.getTime() / 1000;\r\n      newTweetTime.unshift(time);\r\n      newTweet.unshift(this.state.tweetValue);\r\n      this.setState({\r\n        tweets: newTweet,\r\n        timesOfTweets: newTweetTime,\r\n        tweetValue: \"\"\r\n      });\r\n      this.updateDb();\r\n    }\r\n  }\r\n  updateDb() {\r\n    this.db\r\n      .collection(\"users\")\r\n      .updateOne(\r\n        { owner_id: this.client.auth.user.id },\r\n        {\r\n          $set: {\r\n            profilePicture: this.state.profilePicture,\r\n            username: this.state.usernameValue || this.state.username,\r\n            tweets: this.state.tweets,\r\n            timesOfTweets: this.state.timesOfTweets,\r\n            following: this.state.following\r\n          }\r\n        },\r\n        { upsert: true }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  uploadPicture(info) {\r\n    this.db\r\n      .collection(\"users\")\r\n      .updateOne(\r\n        { owner_id: this.client.auth.user.id },\r\n        {\r\n          $set: {\r\n            profilePicture:\r\n              \"https://ucarecdn.com/\" + info.uuid + \"/-/resize/150x/\"\r\n          }\r\n        },\r\n        this.setState({\r\n          profilePicture:\r\n            \"https://ucarecdn.com/\" + info.uuid + \"/-/resize/150x/\"\r\n        }),\r\n        { upsert: true }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getSearch(event) {\r\n    if (event.target.value !== \"\") {\r\n      this.setState({\r\n        searchEmpty: false\r\n      });\r\n      this.searchResults(event.target.value);\r\n    } else {\r\n      this.setState({\r\n        searchEmpty: true\r\n      });\r\n    }\r\n    this.setState({\r\n      search: event.target.value\r\n    });\r\n  }\r\n  clearSearch() {\r\n    this.setState({\r\n      searchEmpty: true,\r\n      search: \"\"\r\n    });\r\n  }\r\n  searchResults(arg) {\r\n    this.db\r\n      .collection(\"users\")\r\n      .find({ username: new RegExp(arg) })\r\n      .toArray()\r\n      .then(results => {\r\n        if (results.length > 0) {\r\n          this.setState({\r\n            searchResultsArray: [...results]\r\n          });\r\n        }\r\n        console.log(results);\r\n      });\r\n  }\r\n  follow(item) {\r\n    let newFollowing = this.state.following;\r\n    newFollowing.push(item);\r\n    this.setState({\r\n      following: [...newFollowing]\r\n    });\r\n  }\r\n  unfollow(item) {\r\n    let newFollowing = this.state.following.filter(function(el) {\r\n      return el.owner_id !== item.owner_id;\r\n    });\r\n    if (newFollowing.length === 0) {\r\n      this.setState({\r\n        following: []\r\n      });\r\n    }\r\n    this.setState({\r\n      following: [...newFollowing]\r\n    });\r\n  }\r\n  setIntitalState() {\r\n    this.user\r\n      .then(() =>\r\n        this.db\r\n          .collection(\"users\")\r\n          .findOne({ owner_id: this.client.auth.user.id })\r\n      )\r\n      .then(docs => {\r\n        if (docs) {\r\n          this.setState({\r\n            profilePicture: docs.profilePicture || \"logo.png\",\r\n            tweetCounter: docs.tweetCounter,\r\n            tweets: docs.tweets,\r\n            timesOfTweets: docs.timesOfTweets,\r\n            username: docs.username,\r\n            following: docs.following\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.setIntitalState();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.state.profilePicture !== prevState.profilePicture ||\r\n      this.state.tweets !== prevState.tweets ||\r\n      this.state.username !== prevState.username ||\r\n      this.state.following !== prevState.following\r\n    ) {\r\n      this.updateDb();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.username === \"\") {\r\n      return (\r\n        <div className='login-container animation'>\r\n          <div className='logo-container'>\r\n            <img src='logo.png' alt='logo' />\r\n          </div>\r\n          <p>\r\n            Welcome to Twudder (like a twitter, but with no annoying tweets)\r\n          </p>\r\n          <div className='username-input-container'>\r\n            <input\r\n              id='username-input'\r\n              type='text'\r\n              value={this.state.usernameValue}\r\n              onChange={this.usernameInput}\r\n              onKeyDown={this.usernameInputKeyHandler}\r\n            />\r\n            <label className='username-input-label' htmlFor='username-input'>\r\n              Please enter your name and press Enter\r\n            </label>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className='search-container'>\r\n            <div className='search-input-container'>\r\n              <input\r\n                id='search'\r\n                type='text'\r\n                value={this.state.search}\r\n                onChange={this.getSearch}\r\n                placeholder='Search...'\r\n              />\r\n              <button onClick={this.clearSearch}>Clear</button>\r\n            </div>\r\n            {!this.state.searchEmpty ? (\r\n              <SearchResults\r\n                searchResultsArray={this.state.searchResultsArray}\r\n                following={this.state.following}\r\n                follow={this.follow}\r\n                unfollow={this.unfollow}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className='container'>\r\n            <div className='profile-container'>\r\n              <Profile\r\n                profilePicture={this.state.profilePicture}\r\n                username={this.state.username}\r\n                usernameShort={\r\n                  \"@\" + this.state.username.toLowerCase().replace(/\\s/g, \"\")\r\n                }\r\n                tweetCounter={this.state.tweets.length}\r\n              />\r\n              <div className='uploader'>\r\n                <label htmlFor='file'>Change Picture:</label>{\" \"}\r\n                <Uploader\r\n                  id='file'\r\n                  name='file'\r\n                  data-tabs='file camera'\r\n                  onChange={file => {\r\n                    console.log(\"File changed: \", file);\r\n                    if (file) {\r\n                      file.progress(info =>\r\n                        console.log(\"File progress: \", info.progress)\r\n                      );\r\n                      file.done(info => console.log(\"File uploaded: \", info));\r\n                    }\r\n                  }}\r\n                  onUploadComplete={info => this.uploadPicture(info)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='buttons-and-tweets'>\r\n              <div className='buttons-container'>\r\n                <button\r\n                  className={this.state.home ? \"button --active\" : \"button\"}\r\n                  onClick={() => this.setState({ home: true })}\r\n                >\r\n                  Home\r\n                </button>\r\n                <button\r\n                  className={this.state.home ? \"button\" : \"button --active\"}\r\n                  onClick={() => this.setState({ home: false })}\r\n                >\r\n                  Feed\r\n                </button>\r\n              </div>\r\n              <div className='tweets-container'>\r\n                <div className='post-container'>\r\n                  <input\r\n                    id='post'\r\n                    type='text'\r\n                    value={this.state.tweetValue}\r\n                    onChange={this.handleTweetChange}\r\n                    onKeyDown={this.handleTweetKeyDown}\r\n                  />\r\n                  <label className='post-label' htmlFor='post'>\r\n                    Please enter your tweet and press Enter\r\n                  </label>\r\n                </div>\r\n                {this.state.home ? (\r\n                  <TweetBox\r\n                    tweets={this.state.tweets}\r\n                    timesOfTweets={this.state.timesOfTweets}\r\n                    profilePicture={this.state.profilePicture}\r\n                    usernameShort={\r\n                      \"@\" + this.state.username.toLowerCase().replace(/\\s/g, \"\")\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <NewTweetBox tweets={this.state.following} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}