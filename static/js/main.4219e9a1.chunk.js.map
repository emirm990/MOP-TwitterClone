{"version":3,"sources":["components/Following.js","components/Profile.js","components/Comments.js","components/Tweet.js","components/TweetBox.js","components/Uploader.js","components/NewTweetBox.js","components/SearchItems.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["Following","props","key","index","className","src","following","profilePicture","alt","username","tweets","length","unfollow","onClick","Profile","Fragment","id","usernameShort","tweetCounter","map","followers","Comments","comment","library","add","faEyeSlash","faComments","Tweet","comments","useEffect","formated","tweet","split","err","console","log","setComment","useState","commentsOpen","setCommentsOpen","inputValue","setInputValue","posted","setPosted","time","timesOfTweet","autoUpdate","type","placeholder","value","onChange","e","target","onKeyDown","event","keyCode","setTimeout","icon","size","TweetBox","datakey","timesOfTweets","owner_id","Uploader","widget","uploadcare","Widget","this","uploader","onUploadComplete","files","onDialogOpen","dialog","reject","jQuery","when","apply","cancel","widgetElement","next","data","inputElement","remove","attributes","Object","assign","getInputAttributes","ref","input","Component","newTimesSorted","NewTweetBox","array","timesSorted","push","item","times","sort","a","b","toLowerCase","replace","SearchItems","setFollowing","i","checkIfFollowing","follow","SearchResults","searchResultsArray","App","state","tweetValue","usernameValue","search","searchEmpty","home","usernameInput","bind","usernameInputKeyHandler","handleTweetChange","handleTweetKeyDown","post","updateDb","uploadPicture","getSearch","clearSearch","searchResults","setIntitalState","checkForChanges","checkForOwnChanges","client","Stitch","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","user","auth","loginWithCredential","AnonymousCredential","setState","alert","newTweet","newTweetTime","Date","getTime","unshift","collection","updateOne","$set","upsert","catch","error","info","uuid","arg","find","RegExp","toArray","then","results","newFollowing","filter","el","j","findOne","docs","indexOf","list","$in","resultsSorted","followingSorted","interval","setInterval","selfInterval","followersInterval","prevProps","prevState","clearInterval","htmlFor","name","data-tabs","file","progress","done","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4219e9a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/following.css\";\r\nconst Following = props => {\r\n  return (\r\n    <div key={props.index} className='profile-following-item'>\r\n      <img\r\n        className='profile-following-image'\r\n        src={props.following.profilePicture}\r\n        alt='following profile'\r\n      />\r\n      <p className='profile-following-username'>{props.following.username}</p>\r\n      <div className='profile-following-modal'>\r\n        <img src={props.following.profilePicture} alt='following profile' />\r\n        <div className='profile-following-modal-info'>\r\n          <p className='profile-following-modal-p'>\r\n            {props.following.username}\r\n          </p>\r\n          <p className='profile-following-modal-p'>\r\n            {\" \"}\r\n            Tweets: {props.following.tweets.length}\r\n          </p>\r\n          {props.unfollow ? (\r\n            <button\r\n              className='profile-following-unfollow'\r\n              onClick={() => props.unfollow(props.following)}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Following;\r\n","import React from \"react\";\r\nimport \"../styles/profile.css\";\r\nimport Following from \"./Following.js\";\r\nconst Profile = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='profile-flex'>\r\n        <div className='profile-image'>\r\n          <span className='change-picture'>Change Picture:</span>\r\n          <img id='profile-image' src={props.profilePicture} alt='profile' />\r\n        </div>\r\n        <div className='profile-info'>\r\n          <div>{props.username}</div>\r\n          <div>{props.usernameShort}</div>\r\n          <div>Tweets: {props.tweetCounter}</div>\r\n        </div>\r\n      </div>\r\n      <div className='profile-following'>\r\n        <p>Following: </p>\r\n        {props.following.map((following, index) => (\r\n          <Following\r\n            key={index}\r\n            following={following}\r\n            index={index}\r\n            unfollow={props.unfollow}\r\n          />\r\n        ))}\r\n        <p>Followers: </p>\r\n        {props.followers.map((followers, index) => (\r\n          <Following key={index} following={followers} index={index} />\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nconst Comments = props => {\r\n  return <p>{props.comment}</p>;\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Timestamp from \"react-timestamp\";\r\nimport Comments from \"./Comments.js\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEyeSlash, faComments } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../styles/tweet.css\";\r\nlibrary.add(faEyeSlash, faComments);\r\nconst Tweet = props => {\r\n  let comments = [];\r\n  useEffect(() => {\r\n    let formated = [];\r\n    formated[0] = props.tweet;\r\n    try {\r\n      if (formated[0].length === 1) {\r\n        comments = formated[0][0].split(\"&?\");\r\n      } else {\r\n        comments = formated[0].split(\"&?\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setComment(comments);\r\n  }, [props.tweet]);\r\n  const [comment, setComment] = useState([]);\r\n  const [commentsOpen, setCommentsOpen] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [posted, setPosted] = useState(false);\r\n\r\n  function clearComment(key) {\r\n    if (key === 13) {\r\n      setInputValue(\"\");\r\n      setPosted(true);\r\n    }\r\n    setTimeout(function() {\r\n      setPosted(false);\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <li className='list-item'>\r\n        <div className='tweet-picture-container'>\r\n          <img src={props.profilePicture} alt='profile' />\r\n        </div>\r\n        <div className='tweet-content'>\r\n          <span className='tweet-username'>{props.usernameShort}</span>\r\n          <Timestamp\r\n            className='tweet-time'\r\n            time={props.timesOfTweet}\r\n            autoUpdate\r\n          />\r\n          <p>{comment[0]}</p>\r\n        </div>\r\n      </li>\r\n      <div className='comments-input'>\r\n        <input\r\n          type='text'\r\n          placeholder='Please enter your comment and press Enter'\r\n          className={\r\n            commentsOpen ? \"comments-input-open\" : \"comments-input-closed\"\r\n          }\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n          onKeyDown={event => {\r\n            props.comment(props, inputValue, event.keyCode);\r\n            clearComment(event.keyCode);\r\n          }}\r\n        />\r\n        <div\r\n          className={\r\n            posted ? \"posted-indicator posted\" : \"posted-indicator not-posted\"\r\n          }\r\n        >\r\n          <span>Posted</span>\r\n        </div>\r\n        {commentsOpen ? (\r\n          <button\r\n            className='open-comments-button --opened-comments'\r\n            onClick={() => setCommentsOpen(!commentsOpen)}\r\n          >\r\n            <FontAwesomeIcon icon='eye-slash' size='lg' />\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className='open-comments-button --closed-comments'\r\n            onClick={() => setCommentsOpen(!commentsOpen)}\r\n          >\r\n            <FontAwesomeIcon icon='comments' size='lg' />\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          commentsOpen ? \"comments comments-open\" : \"comments comments-closed\"\r\n        }\r\n      >\r\n        {comment.map((comment, index) =>\r\n          index === 0 ? null : (\r\n            <div key={index}>\r\n              <Comments comment={comment} />\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../styles/tweetbox.css\";\r\n\r\nconst TweetBox = props => {\r\n  return (\r\n    <div className='tweetbox-container'>\r\n      <ul>\r\n        {props.tweets.map((tweet, index) => (\r\n          <Tweet\r\n            key={index}\r\n            datakey={index}\r\n            length={props.tweets.length}\r\n            tweet={tweet}\r\n            timesOfTweet={props.timesOfTweets[index]}\r\n            usernameShort={props.usernameShort}\r\n            profilePicture={props.profilePicture}\r\n            comment={props.comment}\r\n            owner_id={props.owner_id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetBox;\r\n","import React, { Component } from \"react\";\r\nimport uploadcare from \"uploadcare-widget\";\r\n\r\nclass Uploader extends Component {\r\n  componentDidMount() {\r\n    const widget = uploadcare.Widget(this.uploader);\r\n    const { value, onChange, onUploadComplete } = this.props;\r\n\r\n    if (typeof value !== \"undefined\") {\r\n      widget.value(value);\r\n    }\r\n    if (typeof onChange === \"function\") {\r\n      widget.onChange(files => {\r\n        if (files) {\r\n          this.files =\r\n            this.files && this.files.files ? this.files.files() : [this.files];\r\n        } else {\r\n          this.files = null;\r\n        }\r\n\r\n        onChange(files);\r\n      });\r\n    }\r\n    if (typeof onUploadComplete === \"function\") {\r\n      widget.onUploadComplete(onUploadComplete);\r\n    }\r\n    widget.onDialogOpen(dialog => (this.dialog = dialog));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.dialog) {\r\n      this.dialog.reject();\r\n    }\r\n    if (this.files) {\r\n      uploadcare.jQuery.when.apply(null, this.files).cancel();\r\n    }\r\n\r\n    const widgetElement = uploadcare\r\n      .jQuery(this.uploader)\r\n      .next(\".uploadcare--widget\");\r\n    const widget = widgetElement.data(\"uploadcareWidget\");\r\n\r\n    if (widget && widget.inputElement === this.uploader) {\r\n      widgetElement.remove();\r\n    }\r\n  }\r\n\r\n  getInputAttributes() {\r\n    const attributes = Object.assign({}, this.props);\r\n\r\n    delete attributes.value;\r\n    delete attributes.onChange;\r\n    delete attributes.onUploadComplete;\r\n\r\n    return attributes;\r\n  }\r\n\r\n  render() {\r\n    const attributes = this.getInputAttributes();\r\n\r\n    return (\r\n      <input\r\n        type='hidden'\r\n        ref={input => (this.uploader = input)}\r\n        {...attributes}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Uploader;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../styles/tweetbox.css\";\r\nlet newTimesSorted = [];\r\n\r\nconst NewTweetBox = props => {\r\n  const sort = () => {\r\n    let array = [];\r\n    let timesSorted = [];\r\n    array.push(props.tweets);\r\n    array.map(item => {\r\n      item.map(times => {\r\n        times.timesOfTweets.map((timesOfTweets, index) => {\r\n          timesSorted.push([\r\n            timesOfTweets,\r\n            times.tweets[index],\r\n            times.username,\r\n            times.profilePicture,\r\n            times.owner_id\r\n          ]);\r\n          return (newTimesSorted = timesSorted.sort(function(a, b) {\r\n            return b[0] - a[0];\r\n          }));\r\n        });\r\n        return null;\r\n      });\r\n      return null;\r\n    });\r\n  };\r\n  sort();\r\n\r\n  if (props.tweets.length !== 0) {\r\n    return (\r\n      <div className='tweetbox-container'>\r\n        <ul>\r\n          {newTimesSorted.map((item, index) => (\r\n            <Tweet\r\n              datakey={index}\r\n              key={index}\r\n              usernameShort={\"@\" + item[2].toLowerCase().replace(/\\s/g, \"\")}\r\n              timesOfTweet={item[0]}\r\n              profilePicture={item[3]}\r\n              tweet={item[1]}\r\n              comment={props.comment}\r\n              owner_id={item[4]}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default NewTweetBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/searchitems.css\";\r\n\r\nconst SearchItems = props => {\r\n  const [following, setFollowing] = useState(false);\r\n\r\n  function checkIfFollowing() {\r\n    for (let i = 0; i < props.following.length; i++) {\r\n      if (props.id === props.following[i].owner_id) {\r\n        setFollowing(true);\r\n        break;\r\n      } else setFollowing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkIfFollowing();\r\n  }, [props.item]);\r\n\r\n  return (\r\n    <div className='search-item-with-button'>\r\n      <div className='search-item-container'>\r\n        <img\r\n          className='search-item-img'\r\n          src={props.item.profilePicture}\r\n          alt='profile'\r\n        />\r\n        <div className='search-item-username'>\r\n          <p>{props.item.username}</p>\r\n          <p>{\"@\" + props.item.username.toLowerCase().replace(/\\s/g, \"\")}</p>\r\n          <p>Tweets: {props.item.tweets.length}</p>\r\n        </div>\r\n      </div>\r\n      {following ? (\r\n        <button\r\n          className='unfollow'\r\n          onClick={() => {\r\n            props.unfollow(props.item);\r\n            setFollowing(false);\r\n          }}\r\n        >\r\n          Unfollow\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className='follow'\r\n          onClick={() => {\r\n            props.follow(props.item);\r\n            setFollowing(true);\r\n          }}\r\n        >\r\n          Follow\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItems;\r\n","import React from \"react\";\r\nimport SearchItems from \"./SearchItems.js\";\r\nimport \"../styles/searchresults.css\";\r\n\r\nconst SearchResults = props => {\r\n  return (\r\n    <ul className='search-list'>\r\n      {props.searchResultsArray.map((item, index) => (\r\n        <li className='search-list-item' key={index}>\r\n          <SearchItems\r\n            item={item}\r\n            id={item.owner_id}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            following={props.following}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./components/Profile.js\";\r\nimport TweetBox from \"./components/TweetBox.js\";\r\nimport Uploader from \"./components/Uploader\";\r\nimport NewTweetBox from \"./components/NewTweetBox.js\";\r\nimport SearchResults from \"./components/SearchResults.js\";\r\nimport {\r\n  Stitch,\r\n  RemoteMongoClient,\r\n  AnonymousCredential\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport \"./styles/app.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.usernameInput = this.usernameInput.bind(this);\r\n    this.usernameInputKeyHandler = this.usernameInputKeyHandler.bind(this);\r\n    this.handleTweetChange = this.handleTweetChange.bind(this);\r\n    this.handleTweetKeyDown = this.handleTweetKeyDown.bind(this);\r\n    this.post = this.post.bind(this);\r\n    this.updateDb = this.updateDb.bind(this);\r\n    this.uploadPicture = this.uploadPicture.bind(this);\r\n    this.getSearch = this.getSearch.bind(this);\r\n    this.clearSearch = this.clearSearch.bind(this);\r\n    this.searchResults = this.searchResults.bind(this);\r\n    this.follow = this.follow.bind(this);\r\n    this.unfollow = this.unfollow.bind(this);\r\n    this.followers = this.followers.bind(this);\r\n    this.setIntitalState = this.setIntitalState.bind(this);\r\n    this.comment = this.comment.bind(this);\r\n    this.checkForChanges = this.checkForChanges.bind(this);\r\n    this.checkForOwnChanges = this.checkForOwnChanges.bind(this);\r\n    this.client = Stitch.initializeDefaultAppClient(\"twitter-clone-hgeer\");\r\n    this.db = this.client\r\n      .getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\")\r\n      .db(\"test\");\r\n    this.user = this.client.auth.loginWithCredential(new AnonymousCredential());\r\n  }\r\n\r\n  state = {\r\n    profilePicture: \"logo.png\",\r\n    username: \"\",\r\n    timesOfTweets: [],\r\n    tweets: [],\r\n    tweetValue: \"\",\r\n    usernameValue: \"\",\r\n    search: \"\",\r\n    searchEmpty: true,\r\n    searchResultsArray: [],\r\n    following: [],\r\n    followers: [],\r\n    home: true,\r\n    owner_id: \"\"\r\n  };\r\n  usernameInput(event) {\r\n    this.setState({\r\n      usernameValue: event.target.value\r\n    });\r\n  }\r\n  usernameInputKeyHandler(event) {\r\n    if (event.key === \"Enter\") {\r\n      if (!event.target.value) {\r\n        alert(\"name can't be empty\");\r\n      }\r\n      this.setState({\r\n        username: this.state.usernameValue\r\n      });\r\n      this.updateDb();\r\n      console.log(this.client.auth.user.id);\r\n      this.setState({\r\n        owner_id: this.client.auth.user.id\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTweetChange(event) {\r\n    this.setState({\r\n      tweetValue: event.target.value\r\n    });\r\n  }\r\n  handleTweetKeyDown(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.post();\r\n    }\r\n  }\r\n  post() {\r\n    if (this.state.tweetValue !== \"\") {\r\n      let newTweet = this.state.tweets;\r\n      let newTweetTime = this.state.timesOfTweets;\r\n      let date = new Date();\r\n      let time = date.getTime() / 1000;\r\n      newTweetTime.unshift(time);\r\n      newTweet.unshift(this.state.tweetValue);\r\n      this.setState({\r\n        tweets: newTweet,\r\n        timesOfTweets: newTweetTime,\r\n        tweetValue: \"\"\r\n      });\r\n      this.updateDb();\r\n    }\r\n  }\r\n  updateDb() {\r\n    this.db\r\n      .collection(\"test\")\r\n      .updateOne(\r\n        { owner_id: this.client.auth.user.id },\r\n        {\r\n          $set: {\r\n            profilePicture: this.state.profilePicture,\r\n            username: this.state.usernameValue || this.state.username,\r\n            tweets: this.state.tweets,\r\n            timesOfTweets: this.state.timesOfTweets,\r\n            following: this.state.following,\r\n            followers: this.state.followers\r\n          }\r\n        },\r\n        { upsert: true }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  uploadPicture(info) {\r\n    this.db\r\n      .collection(\"test\")\r\n      .updateOne(\r\n        { owner_id: this.client.auth.user.id },\r\n        {\r\n          $set: {\r\n            profilePicture:\r\n              \"https://ucarecdn.com/\" + info.uuid + \"/-/resize/150x/\"\r\n          }\r\n        },\r\n        this.setState({\r\n          profilePicture:\r\n            \"https://ucarecdn.com/\" + info.uuid + \"/-/resize/150x/\"\r\n        }),\r\n        { upsert: true }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getSearch(event) {\r\n    if (event.target.value !== \"\") {\r\n      this.setState({\r\n        searchEmpty: false\r\n      });\r\n      this.searchResults(event.target.value);\r\n    } else {\r\n      this.setState({\r\n        searchEmpty: true\r\n      });\r\n    }\r\n    this.setState({\r\n      search: event.target.value\r\n    });\r\n  }\r\n  clearSearch() {\r\n    this.setState({\r\n      searchEmpty: true,\r\n      search: \"\"\r\n    });\r\n  }\r\n  searchResults(arg) {\r\n    this.db\r\n      .collection(\"test\")\r\n      .find({ username: new RegExp(arg, \"i\") })\r\n      .toArray()\r\n      .then(results => {\r\n        if (results.length > 0) {\r\n          this.setState({\r\n            searchResultsArray: [...results]\r\n          });\r\n        }\r\n      });\r\n  }\r\n  follow(item) {\r\n    let newFollowing = this.state.following;\r\n    newFollowing.push(item);\r\n    this.setState({\r\n      following: [...newFollowing]\r\n    });\r\n  }\r\n  unfollow(item) {\r\n    let newFollowing = this.state.following.filter(function(el) {\r\n      return el.owner_id !== item.owner_id;\r\n    });\r\n    if (newFollowing.length === 0) {\r\n      this.setState({\r\n        following: []\r\n      });\r\n    }\r\n    this.setState({\r\n      following: [...newFollowing]\r\n    });\r\n  }\r\n  followers() {\r\n    let followers = [];\r\n    console.log(\"followers\");\r\n    this.db\r\n      .collection(\"test\")\r\n      .find({})\r\n      .toArray()\r\n      .then(results => {\r\n        for (let i = 0; i < results.length; i++) {\r\n          if (results[i].following.length > 0) {\r\n            for (let j = 0; j < results[i].following.length; j++) {\r\n              if (\r\n                results[i].following[j].owner_id === this.client.auth.user.id\r\n              ) {\r\n                followers.push(results[i]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        //console.log(followers, this.state.followers);\r\n        for (let i = 0; i < followers.length; i++) {\r\n          if (followers.length === this.state.followers.length) {\r\n            if (\r\n              followers[i].profilePicture !==\r\n              this.state.followers[i].profilePicture\r\n            ) {\r\n              this.setState({\r\n                followers: followers\r\n              });\r\n            }\r\n          }\r\n        }\r\n        console.log(followers);\r\n        if (followers.length !== this.state.followers.length) {\r\n          this.setState({\r\n            followers: followers\r\n          });\r\n        }\r\n      });\r\n  }\r\n  setIntitalState() {\r\n    this.user\r\n      .then(() =>\r\n        this.db\r\n          .collection(\"test\")\r\n          .findOne({ owner_id: this.client.auth.user.id })\r\n      )\r\n      .then(docs => {\r\n        if (docs) {\r\n          this.setState({\r\n            profilePicture: docs.profilePicture || \"logo.png\",\r\n            tweets: docs.tweets,\r\n            timesOfTweets: docs.timesOfTweets,\r\n            username: docs.username,\r\n            following: docs.following || [],\r\n            followers: docs.followers || [],\r\n            owner_id: docs.owner_id\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  comment(item, value, key) {\r\n    if (key === 13 && value !== \"\") {\r\n      this.db\r\n        .collection(\"test\")\r\n        .findOne({ owner_id: item.owner_id })\r\n        .then(docs => {\r\n          let index = docs.timesOfTweets.indexOf(item.timesOfTweet);\r\n          let tweets = docs.tweets;\r\n          tweets[index] =\r\n            tweets[index] +\r\n            \"&?\" +\r\n            value +\r\n            \" :\" +\r\n            \"@\" +\r\n            this.state.username.toLowerCase().replace(/\\s/g, \"\");\r\n          this.db\r\n            .collection(\"test\")\r\n            .updateOne(\r\n              { owner_id: item.owner_id },\r\n              {\r\n                $set: {\r\n                  tweets: tweets\r\n                }\r\n              },\r\n              { upsert: true }\r\n            )\r\n            .catch(err => {\r\n              console.error(err);\r\n            });\r\n          if (this.state.home) {\r\n            console.log(this.state.tweets, tweets);\r\n            this.setState({\r\n              tweets: tweets\r\n            });\r\n          } else {\r\n            this.updateDb();\r\n            this.checkForChanges();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n  checkForChanges() {\r\n    let list = [];\r\n    for (let i = 0; i < this.state.following.length; i++) {\r\n      list.push(this.state.following[i].owner_id);\r\n    }\r\n    this.db\r\n      .collection(\"test\")\r\n      .find({\r\n        owner_id: {\r\n          $in: list\r\n        }\r\n      })\r\n      .toArray()\r\n      .then(results => {\r\n        let resultsSorted = results.sort((a, b) =>\r\n          a.owner_id > b.owner_id ? 1 : b.owner_id > a.owner_id ? -1 : 0\r\n        );\r\n        let followingSorted = this.state.following.sort((a, b) =>\r\n          a.owner_id > b.owner_id ? 1 : b.owner_id > a.owner_id ? -1 : 0\r\n        );\r\n        try {\r\n          for (let i = 0; i < followingSorted.length; i++) {\r\n            for (let j = 0; j < resultsSorted[i].tweets.length; j++) {\r\n              if (\r\n                resultsSorted[i].tweets[j] !== followingSorted[i].tweets[j] ||\r\n                resultsSorted[i].profilePicture !==\r\n                  followingSorted[i].profilePicture\r\n              ) {\r\n                this.setState({\r\n                  following: resultsSorted\r\n                });\r\n                this.updateDb();\r\n              }\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      });\r\n  }\r\n  checkForOwnChanges() {\r\n    if (this.state.username) {\r\n      this.user\r\n        .then(() =>\r\n          this.db\r\n            .collection(\"test\")\r\n            .findOne({ owner_id: this.client.auth.user.id })\r\n        )\r\n        .then(docs => {\r\n          for (let i = 0; i < docs.tweets.length; i++) {\r\n            if (docs.tweets[i] !== this.state.tweets[i]) {\r\n              this.setState({\r\n                tweets: docs.tweets\r\n              });\r\n              this.updateDb();\r\n            } else break;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setIntitalState();\r\n    this.interval = setInterval(() => this.checkForChanges(), 2500);\r\n    this.selfInterval = setInterval(() => this.checkForOwnChanges(), 2500);\r\n    this.followersInterval = setInterval(() => this.followers(), 5000);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.following !== prevState.following) {\r\n      this.updateDb();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval, this.selfInterval, this.followersInterval);\r\n  }\r\n  render() {\r\n    if (this.state.username === \"\") {\r\n      return (\r\n        <div className='login-container animation'>\r\n          <div className='logo-container'>\r\n            <img src='logo.png' alt='logo' />\r\n          </div>\r\n          <p>\r\n            Welcome to Twudder (like a twitter, but with no annoying tweets)\r\n          </p>\r\n          <div className='username-input-container'>\r\n            <input\r\n              id='username-input'\r\n              type='text'\r\n              value={this.state.usernameValue}\r\n              onChange={this.usernameInput}\r\n              onKeyDown={this.usernameInputKeyHandler}\r\n            />\r\n            <label className='username-input-label' htmlFor='username-input'>\r\n              Please enter your name and press Enter\r\n            </label>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className='search-container'>\r\n            <div className='search-input-container'>\r\n              <input\r\n                id='search'\r\n                type='text'\r\n                value={this.state.search}\r\n                onChange={this.getSearch}\r\n                placeholder='Search...'\r\n              />\r\n              <button onClick={this.clearSearch}>Clear</button>\r\n            </div>\r\n            {!this.state.searchEmpty ? (\r\n              <SearchResults\r\n                searchResultsArray={this.state.searchResultsArray}\r\n                following={this.state.following}\r\n                follow={this.follow}\r\n                unfollow={this.unfollow}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className='container' onClick={() => this.clearSearch()}>\r\n            <div className='profile-container'>\r\n              <Profile\r\n                profilePicture={this.state.profilePicture}\r\n                username={this.state.username}\r\n                usernameShort={\r\n                  \"@\" + this.state.username.toLowerCase().replace(/\\s/g, \"\")\r\n                }\r\n                tweetCounter={this.state.tweets.length}\r\n                following={this.state.following}\r\n                followers={this.state.followers}\r\n                unfollow={this.unfollow}\r\n              />\r\n              <div className='uploader'>\r\n                <label htmlFor='file'>Change Picture:</label>{\" \"}\r\n                <Uploader\r\n                  id='file'\r\n                  name='file'\r\n                  data-tabs='file camera'\r\n                  onChange={file => {\r\n                    console.log(\"File changed: \", file);\r\n                    if (file) {\r\n                      file.progress(info =>\r\n                        console.log(\"File progress: \", info.progress)\r\n                      );\r\n                      file.done(info => console.log(\"File uploaded: \", info));\r\n                    }\r\n                  }}\r\n                  onUploadComplete={info => this.uploadPicture(info)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='buttons-and-tweets'>\r\n              <div className='buttons-container'>\r\n                <button\r\n                  className={this.state.home ? \"button --active\" : \"button\"}\r\n                  onClick={() => this.setState({ home: true })}\r\n                >\r\n                  Home\r\n                </button>\r\n                <button\r\n                  className={this.state.home ? \"button\" : \"button --active\"}\r\n                  onClick={() => this.setState({ home: false })}\r\n                >\r\n                  Feed\r\n                </button>\r\n              </div>\r\n              <div className='tweets-container'>\r\n                {this.state.home ? (\r\n                  <div className='post-container'>\r\n                    <input\r\n                      id='post'\r\n                      type='text'\r\n                      value={this.state.tweetValue}\r\n                      onChange={this.handleTweetChange}\r\n                      onKeyDown={this.handleTweetKeyDown}\r\n                    />\r\n                    <label className='post-label' htmlFor='post'>\r\n                      Please enter your tweet and press Enter\r\n                    </label>\r\n                  </div>\r\n                ) : null}\r\n\r\n                {this.state.home ? (\r\n                  <TweetBox\r\n                    tweets={this.state.tweets}\r\n                    timesOfTweets={this.state.timesOfTweets}\r\n                    profilePicture={this.state.profilePicture}\r\n                    usernameShort={\r\n                      \"@\" + this.state.username.toLowerCase().replace(/\\s/g, \"\")\r\n                    }\r\n                    comment={this.comment}\r\n                    owner_id={this.state.owner_id}\r\n                  />\r\n                ) : (\r\n                  <NewTweetBox\r\n                    tweets={this.state.following}\r\n                    comment={this.comment}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}