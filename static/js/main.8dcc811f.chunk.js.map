{"version":3,"sources":["components/Following.js","components/Profile.js","components/Comments.js","components/Tweet.js","components/TweetBox.js","components/Uploader.js","components/NewTweetBox.js","components/SearchItems.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["Following","props","react_default","a","createElement","key","index","className","src","following","profilePicture","alt","username","tweets","length","onClick","unfollow","Profile","Fragment","id","usernameShort","tweetCounter","map","components_Following","Comments","comment","library","add","faEyeSlash","faComments","Tweet","comments","useEffect","formated","tweet","split","err","console","log","setComment","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","commentsOpen","setCommentsOpen","_useState5","_useState6","inputValue","setInputValue","_useState7","_useState8","posted","setPosted","timestamp_default","time","timesOfTweet","autoUpdate","type","placeholder","value","onChange","e","target","onKeyDown","event","keyCode","setTimeout","react_fontawesome_index_es","icon","size","components_Comments","TweetBox","components_Tweet","datakey","timesOfTweets","owner_id","Uploader","_this","this","widget","uploadcare","Widget","uploader","_this$props","onUploadComplete","files","onDialogOpen","dialog","reject","jQuery","when","apply","cancel","widgetElement","next","data","inputElement","remove","attributes","assign","_this2","getInputAttributes","ref","input","Component","newTimesSorted","NewTweetBox","array","timesSorted","push","item","times","sort","b","toLowerCase","replace","SearchItems","setFollowing","i","checkIfFollowing","follow","SearchResults","searchResultsArray","components_SearchItems","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","tweetValue","usernameValue","search","searchEmpty","home","usernameInput","bind","assertThisInitialized","usernameInputKeyHandler","handleTweetChange","handleTweetKeyDown","post","updateDb","uploadPicture","getSearch","clearSearch","searchResults","setIntitalState","checkForChanges","checkForOwnChanges","client","Stitch","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","user","auth","loginWithCredential","AnonymousCredential","setState","alert","newTweet","newTweetTime","Date","getTime","unshift","collection","updateOne","$set","upsert","catch","error","info","uuid","arg","find","RegExp","toArray","then","results","toConsumableArray","newFollowing","filter","el","_this3","findOne","docs","_this4","indexOf","_this5","list","$in","resultsSorted","followingSorted","j","_this6","_this7","interval","setInterval","selfInterval","prevProps","prevState","clearInterval","_this8","htmlFor","components_SearchResults","components_Profile","components_Uploader","name","data-tabs","file","progress","done","components_TweetBox","components_NewTweetBox","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8dcc811f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/following.css\";\r\nconst Following = props => {\r\n  return (\r\n    <div key={props.index} className='profile-following-item'>\r\n      <img\r\n        className='profile-following-image'\r\n        src={props.following.profilePicture}\r\n        alt='following profile'\r\n      />\r\n      <p className='profile-following-username'>{props.following.username}</p>\r\n      <div className='profile-following-modal'>\r\n        <img src={props.following.profilePicture} alt='following profile' />\r\n        <div className='profile-following-modal-info'>\r\n          <p className='profile-following-modal-p'>\r\n            {props.following.username}\r\n          </p>\r\n          <p className='profile-following-modal-p'>\r\n            {\" \"}\r\n            Tweets: {props.following.tweets.length}\r\n          </p>\r\n          <button\r\n            className='profile-following-unfollow'\r\n            onClick={() => props.unfollow(props.following)}\r\n          >\r\n            Unfollow\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Following;\r\n","import React from \"react\";\r\nimport \"../styles/profile.css\";\r\nimport Following from \"./Following.js\";\r\nconst Profile = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='profile-flex'>\r\n        <div className='profile-image'>\r\n          <img id='profile-image' src={props.profilePicture} alt='profile' />\r\n        </div>\r\n        <div className='profile-info'>\r\n          <div>{props.username}</div>\r\n          <div>{props.usernameShort}</div>\r\n          <div>Tweets: {props.tweetCounter}</div>\r\n        </div>\r\n      </div>\r\n      <div className='profile-following'>\r\n        <p>Following: </p>\r\n        {props.following.map((following, index) => (\r\n          <Following\r\n            key={index}\r\n            following={following}\r\n            index={index}\r\n            unfollow={props.unfollow}\r\n          />\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nconst Comments = props => {\r\n  return <p>{props.comment}</p>;\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Timestamp from \"react-timestamp\";\r\nimport Comments from \"./Comments.js\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEyeSlash, faComments } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../styles/tweet.css\";\r\nlibrary.add(faEyeSlash, faComments);\r\nconst Tweet = props => {\r\n  let comments = [];\r\n  useEffect(() => {\r\n    let formated = [];\r\n    formated[0] = props.tweet;\r\n    try {\r\n      if (formated[0].length === 1) {\r\n        comments = formated[0][0].split(\"&?\");\r\n      } else {\r\n        comments = formated[0].split(\"&?\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setComment(comments);\r\n  }, [props.tweet]);\r\n  const [comment, setComment] = useState([]);\r\n  const [commentsOpen, setCommentsOpen] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [posted, setPosted] = useState(false);\r\n\r\n  function clearComment(key) {\r\n    if (key === 13) {\r\n      setInputValue(\"\");\r\n      setPosted(true);\r\n    }\r\n    setTimeout(function() {\r\n      setPosted(false);\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <li className='list-item'>\r\n        <div className='tweet-picture-container'>\r\n          <img src={props.profilePicture} alt='profile' />\r\n        </div>\r\n        <div className='tweet-content'>\r\n          <span className='tweet-username'>{props.usernameShort}</span>\r\n          <Timestamp\r\n            className='tweet-time'\r\n            time={props.timesOfTweet}\r\n            autoUpdate\r\n          />\r\n          <p>{comment[0]}</p>\r\n        </div>\r\n      </li>\r\n      <div className='comments-input'>\r\n        <input\r\n          type='text'\r\n          placeholder='Please enter your comment and press Enter'\r\n          className={\r\n            commentsOpen ? \"comments-input-open\" : \"comments-input-closed\"\r\n          }\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n          onKeyDown={event => {\r\n            props.comment(props, inputValue, event.keyCode);\r\n            clearComment(event.keyCode);\r\n          }}\r\n        />\r\n        <div\r\n          className={\r\n            posted ? \"posted-indicator posted\" : \"posted-indicator not-posted\"\r\n          }\r\n        >\r\n          <span>Posted</span>\r\n        </div>\r\n        {commentsOpen ? (\r\n          <button\r\n            className='open-comments-button --opened-comments'\r\n            onClick={() => setCommentsOpen(!commentsOpen)}\r\n          >\r\n            <FontAwesomeIcon icon='eye-slash' size='lg' />\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className='open-comments-button --closed-comments'\r\n            onClick={() => setCommentsOpen(!commentsOpen)}\r\n          >\r\n            <FontAwesomeIcon icon='comments' size='lg' />\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          commentsOpen ? \"comments comments-open\" : \"comments comments-closed\"\r\n        }\r\n      >\r\n        {comment.map((comment, index) =>\r\n          index === 0 ? null : (\r\n            <div key={index}>\r\n              <Comments comment={comment} />\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../styles/tweetbox.css\";\r\n\r\nconst TweetBox = props => {\r\n  return (\r\n    <div className='tweetbox-container'>\r\n      <ul>\r\n        {props.tweets.map((tweet, index) => (\r\n          <Tweet\r\n            key={index}\r\n            datakey={index}\r\n            length={props.tweets.length}\r\n            tweet={tweet}\r\n            timesOfTweet={props.timesOfTweets[index]}\r\n            usernameShort={props.usernameShort}\r\n            profilePicture={props.profilePicture}\r\n            comment={props.comment}\r\n            owner_id={props.owner_id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetBox;\r\n","import React, { Component } from \"react\";\r\nimport uploadcare from \"uploadcare-widget\";\r\n\r\nclass Uploader extends Component {\r\n  componentDidMount() {\r\n    const widget = uploadcare.Widget(this.uploader);\r\n    const { value, onChange, onUploadComplete } = this.props;\r\n\r\n    if (typeof value !== \"undefined\") {\r\n      widget.value(value);\r\n    }\r\n    if (typeof onChange === \"function\") {\r\n      widget.onChange(files => {\r\n        if (files) {\r\n          this.files =\r\n            this.files && this.files.files ? this.files.files() : [this.files];\r\n        } else {\r\n          this.files = null;\r\n        }\r\n\r\n        onChange(files);\r\n      });\r\n    }\r\n    if (typeof onUploadComplete === \"function\") {\r\n      widget.onUploadComplete(onUploadComplete);\r\n    }\r\n    widget.onDialogOpen(dialog => (this.dialog = dialog));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.dialog) {\r\n      this.dialog.reject();\r\n    }\r\n    if (this.files) {\r\n      uploadcare.jQuery.when.apply(null, this.files).cancel();\r\n    }\r\n\r\n    const widgetElement = uploadcare\r\n      .jQuery(this.uploader)\r\n      .next(\".uploadcare--widget\");\r\n    const widget = widgetElement.data(\"uploadcareWidget\");\r\n\r\n    if (widget && widget.inputElement === this.uploader) {\r\n      widgetElement.remove();\r\n    }\r\n  }\r\n\r\n  getInputAttributes() {\r\n    const attributes = Object.assign({}, this.props);\r\n\r\n    delete attributes.value;\r\n    delete attributes.onChange;\r\n    delete attributes.onUploadComplete;\r\n\r\n    return attributes;\r\n  }\r\n\r\n  render() {\r\n    const attributes = this.getInputAttributes();\r\n\r\n    return (\r\n      <input\r\n        type='hidden'\r\n        ref={input => (this.uploader = input)}\r\n        {...attributes}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Uploader;\r\n","import React from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../styles/tweetbox.css\";\r\nlet newTimesSorted = [];\r\n\r\nconst NewTweetBox = props => {\r\n  const sort = () => {\r\n    let array = [];\r\n    let timesSorted = [];\r\n    array.push(props.tweets);\r\n    array.map(item => {\r\n      item.map(times => {\r\n        times.timesOfTweets.map((timesOfTweets, index) => {\r\n          timesSorted.push([\r\n            timesOfTweets,\r\n            times.tweets[index],\r\n            times.username,\r\n            times.profilePicture,\r\n            times.owner_id\r\n          ]);\r\n          return (newTimesSorted = timesSorted.sort(function(a, b) {\r\n            return b[0] - a[0];\r\n          }));\r\n        });\r\n        return null;\r\n      });\r\n      return null;\r\n    });\r\n  };\r\n  sort();\r\n\r\n  if (props.tweets.length !== 0) {\r\n    return (\r\n      <div className='tweetbox-container'>\r\n        <ul>\r\n          {newTimesSorted.map((item, index) => (\r\n            <Tweet\r\n              datakey={index}\r\n              key={index}\r\n              usernameShort={\"@\" + item[2].toLowerCase().replace(/\\s/g, \"\")}\r\n              timesOfTweet={item[0]}\r\n              profilePicture={item[3]}\r\n              tweet={item[1]}\r\n              comment={props.comment}\r\n              owner_id={item[4]}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default NewTweetBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/searchitems.css\";\r\n\r\nconst SearchItems = props => {\r\n  const [following, setFollowing] = useState(false);\r\n\r\n  function checkIfFollowing() {\r\n    for (let i = 0; i < props.following.length; i++) {\r\n      if (props.id === props.following[i].owner_id) {\r\n        setFollowing(true);\r\n        break;\r\n      } else setFollowing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkIfFollowing();\r\n  }, [props.item]);\r\n\r\n  return (\r\n    <div className='search-item-with-button'>\r\n      <div className='search-item-container'>\r\n        <img\r\n          className='search-item-img'\r\n          src={props.item.profilePicture}\r\n          alt='profile'\r\n        />\r\n        <div className='search-item-username'>\r\n          <p>{props.item.username}</p>\r\n          <p>{\"@\" + props.item.username.toLowerCase().replace(/\\s/g, \"\")}</p>\r\n          <p>Tweets: {props.item.tweets.length}</p>\r\n        </div>\r\n      </div>\r\n      {following ? (\r\n        <button\r\n          className='unfollow'\r\n          onClick={() => {\r\n            props.unfollow(props.item);\r\n            setFollowing(false);\r\n          }}\r\n        >\r\n          Unfollow\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className='follow'\r\n          onClick={() => {\r\n            props.follow(props.item);\r\n            setFollowing(true);\r\n          }}\r\n        >\r\n          Follow\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItems;\r\n","import React from \"react\";\r\nimport SearchItems from \"./SearchItems.js\";\r\nimport \"../styles/searchresults.css\";\r\n\r\nconst SearchResults = props => {\r\n  return (\r\n    <ul className='search-list'>\r\n      {props.searchResultsArray.map((item, index) => (\r\n        <li className='search-list-item' key={index}>\r\n          <SearchItems\r\n            item={item}\r\n            id={item.owner_id}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            following={props.following}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./components/Profile.js\";\r\nimport TweetBox from \"./components/TweetBox.js\";\r\nimport Uploader from \"./components/Uploader\";\r\nimport NewTweetBox from \"./components/NewTweetBox.js\";\r\nimport SearchResults from \"./components/SearchResults.js\";\r\nimport {\r\n  Stitch,\r\n  RemoteMongoClient,\r\n  AnonymousCredential\r\n} from \"mongodb-stitch-browser-sdk\";\r\nimport \"./styles/app.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.usernameInput = this.usernameInput.bind(this);\r\n    this.usernameInputKeyHandler = this.usernameInputKeyHandler.bind(this);\r\n    this.handleTweetChange = this.handleTweetChange.bind(this);\r\n    this.handleTweetKeyDown = this.handleTweetKeyDown.bind(this);\r\n    this.post = this.post.bind(this);\r\n    this.updateDb = this.updateDb.bind(this);\r\n    this.uploadPicture = this.uploadPicture.bind(this);\r\n    this.getSearch = this.getSearch.bind(this);\r\n    this.clearSearch = this.clearSearch.bind(this);\r\n    this.searchResults = this.searchResults.bind(this);\r\n    this.follow = this.follow.bind(this);\r\n    this.unfollow = this.unfollow.bind(this);\r\n    this.setIntitalState = this.setIntitalState.bind(this);\r\n    this.comment = this.comment.bind(this);\r\n    this.checkForChanges = this.checkForChanges.bind(this);\r\n    this.checkForOwnChanges = this.checkForOwnChanges.bind(this);\r\n    this.client = Stitch.initializeDefaultAppClient(\"twitter-clone-hgeer\");\r\n    this.db = this.client\r\n      .getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\")\r\n      .db(\"test\");\r\n    this.user = this.client.auth.loginWithCredential(new AnonymousCredential());\r\n  }\r\n\r\n  state = {\r\n    profilePicture: \"logo.png\",\r\n    username: \"\",\r\n    timesOfTweets: [],\r\n    tweets: [],\r\n    tweetValue: \"\",\r\n    usernameValue: \"\",\r\n    search: \"\",\r\n    searchEmpty: true,\r\n    searchResultsArray: [],\r\n    following: [],\r\n    home: true,\r\n    owner_id: \"\"\r\n  };\r\n  usernameInput(event) {\r\n    this.setState({\r\n      usernameValue: event.target.value\r\n    });\r\n  }\r\n  usernameInputKeyHandler(event) {\r\n    if (event.key === \"Enter\") {\r\n      if (!event.target.value) {\r\n        alert(\"name can't be empty\");\r\n      }\r\n      this.setState({\r\n        username: this.state.usernameValue\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTweetChange(event) {\r\n    this.setState({\r\n      tweetValue: event.target.value\r\n    });\r\n  }\r\n  handleTweetKeyDown(event) {\r\n    if (event.key === \"Enter\") {\r\n      this.post();\r\n    }\r\n  }\r\n  post() {\r\n    if (this.state.tweetValue !== \"\") {\r\n      let newTweet = this.state.tweets;\r\n      let newTweetTime = this.state.timesOfTweets;\r\n      let date = new Date();\r\n      let time = date.getTime() / 1000;\r\n      newTweetTime.unshift(time);\r\n      newTweet.unshift(this.state.tweetValue);\r\n      this.setState({\r\n        tweets: newTweet,\r\n        timesOfTweets: newTweetTime,\r\n        tweetValue: \"\"\r\n      });\r\n      this.updateDb();\r\n    }\r\n  }\r\n  updateDb() {\r\n    this.db\r\n      .collection(\"test\")\r\n      .updateOne(\r\n        { owner_id: this.client.auth.user.id },\r\n        {\r\n          $set: {\r\n            profilePicture: this.state.profilePicture,\r\n            username: this.state.usernameValue || this.state.username,\r\n            tweets: this.state.tweets,\r\n            timesOfTweets: this.state.timesOfTweets,\r\n            following: this.state.following\r\n          }\r\n        },\r\n        { upsert: true }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  uploadPicture(info) {\r\n    this.db\r\n      .collection(\"test\")\r\n      .updateOne(\r\n        { owner_id: this.client.auth.user.id },\r\n        {\r\n          $set: {\r\n            profilePicture:\r\n              \"https://ucarecdn.com/\" + info.uuid + \"/-/resize/150x/\"\r\n          }\r\n        },\r\n        this.setState({\r\n          profilePicture:\r\n            \"https://ucarecdn.com/\" + info.uuid + \"/-/resize/150x/\"\r\n        }),\r\n        { upsert: true }\r\n      )\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  getSearch(event) {\r\n    if (event.target.value !== \"\") {\r\n      this.setState({\r\n        searchEmpty: false\r\n      });\r\n      this.searchResults(event.target.value);\r\n    } else {\r\n      this.setState({\r\n        searchEmpty: true\r\n      });\r\n    }\r\n    this.setState({\r\n      search: event.target.value\r\n    });\r\n  }\r\n  clearSearch() {\r\n    this.setState({\r\n      searchEmpty: true,\r\n      search: \"\"\r\n    });\r\n  }\r\n  searchResults(arg) {\r\n    this.db\r\n      .collection(\"test\")\r\n      .find({ username: new RegExp(arg) })\r\n      .toArray()\r\n      .then(results => {\r\n        if (results.length > 0) {\r\n          this.setState({\r\n            searchResultsArray: [...results]\r\n          });\r\n        }\r\n      });\r\n  }\r\n  follow(item) {\r\n    let newFollowing = this.state.following;\r\n    newFollowing.push(item);\r\n    this.setState({\r\n      following: [...newFollowing]\r\n    });\r\n  }\r\n  unfollow(item) {\r\n    let newFollowing = this.state.following.filter(function(el) {\r\n      return el.owner_id !== item.owner_id;\r\n    });\r\n    if (newFollowing.length === 0) {\r\n      this.setState({\r\n        following: []\r\n      });\r\n    }\r\n    this.setState({\r\n      following: [...newFollowing]\r\n    });\r\n  }\r\n\r\n  setIntitalState() {\r\n    this.user\r\n      .then(() =>\r\n        this.db\r\n          .collection(\"test\")\r\n          .findOne({ owner_id: this.client.auth.user.id })\r\n      )\r\n      .then(docs => {\r\n        if (docs) {\r\n          this.setState({\r\n            profilePicture: docs.profilePicture || \"logo.png\",\r\n            tweets: docs.tweets,\r\n            timesOfTweets: docs.timesOfTweets,\r\n            username: docs.username,\r\n            following: docs.following || [],\r\n            owner_id: docs.owner_id\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  comment(item, value, key) {\r\n    if (key === 13 && value !== \"\") {\r\n      this.user\r\n        .then(() =>\r\n          this.db.collection(\"test\").findOne({ owner_id: item.owner_id })\r\n        )\r\n        .then(docs => {\r\n          let index = docs.timesOfTweets.indexOf(item.timesOfTweet);\r\n          let tweets = docs.tweets;\r\n          tweets[index] =\r\n            tweets[index] +\r\n            \"&?\" +\r\n            value +\r\n            \" :\" +\r\n            \"@\" +\r\n            this.state.username.toLowerCase().replace(/\\s/g, \"\");\r\n          this.checkForChanges();\r\n          this.db\r\n            .collection(\"test\")\r\n            .updateOne(\r\n              { owner_id: item.owner_id },\r\n              {\r\n                $set: {\r\n                  tweets: tweets\r\n                }\r\n              },\r\n              { upsert: true }\r\n            )\r\n            .catch(err => {\r\n              console.error(err);\r\n            });\r\n          if (item.owner_id === this.client.auth.user.id) {\r\n            this.setState({\r\n              tweets: tweets\r\n            });\r\n          } else {\r\n            this.checkForChanges();\r\n            this.updateDb();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n  checkForChanges() {\r\n    let list = [];\r\n    for (let i = 0; i < this.state.following.length; i++) {\r\n      list.push(this.state.following[i].owner_id);\r\n    }\r\n    this.db\r\n      .collection(\"test\")\r\n      .find({\r\n        owner_id: {\r\n          $in: list\r\n        }\r\n      })\r\n      .toArray()\r\n      .then(results => {\r\n        let resultsSorted = results.sort((a, b) =>\r\n          a.owner_id > b.owner_id ? 1 : b.owner_id > a.owner_id ? -1 : 0\r\n        );\r\n        let followingSorted = this.state.following.sort((a, b) =>\r\n          a.owner_id > b.owner_id ? 1 : b.owner_id > a.owner_id ? -1 : 0\r\n        );\r\n        try {\r\n          for (let i = 0; i < followingSorted.length; i++) {\r\n            for (let j = 0; j < resultsSorted[i].tweets.length; j++) {\r\n              if (\r\n                resultsSorted[i].tweets[j] !== followingSorted[i].tweets[j] ||\r\n                resultsSorted[i].profilePicture !==\r\n                  followingSorted[i].profilePicture\r\n              ) {\r\n                this.setState({\r\n                  following: resultsSorted\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      });\r\n  }\r\n  checkForOwnChanges() {\r\n    this.user\r\n      .then(() =>\r\n        this.db\r\n          .collection(\"test\")\r\n          .findOne({ owner_id: this.client.auth.user.id })\r\n      )\r\n      .then(docs => {\r\n        for (let i = 0; i < docs.tweets.length; i++) {\r\n          if (docs.tweets[i] !== this.state.tweets[i]) {\r\n            this.setState({\r\n              tweets: docs.tweets\r\n            });\r\n          } else break;\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.setIntitalState();\r\n    this.interval = setInterval(() => this.checkForChanges(), 1000);\r\n    this.selfInterval = setInterval(() => this.checkForOwnChanges(), 1000);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.state.profilePicture !== prevState.profilePicture ||\r\n      this.state.tweets !== prevState.tweets ||\r\n      this.state.username !== prevState.username ||\r\n      this.state.following !== prevState.following ||\r\n      this.state.home !== prevState.home\r\n    ) {\r\n      this.checkForChanges();\r\n      this.updateDb();\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  render() {\r\n    if (this.state.username === \"\") {\r\n      return (\r\n        <div className='login-container animation'>\r\n          <div className='logo-container'>\r\n            <img src='logo.png' alt='logo' />\r\n          </div>\r\n          <p>\r\n            Welcome to Twudder (like a twitter, but with no annoying tweets)\r\n          </p>\r\n          <div className='username-input-container'>\r\n            <input\r\n              id='username-input'\r\n              type='text'\r\n              value={this.state.usernameValue}\r\n              onChange={this.usernameInput}\r\n              onKeyDown={this.usernameInputKeyHandler}\r\n            />\r\n            <label className='username-input-label' htmlFor='username-input'>\r\n              Please enter your name and press Enter\r\n            </label>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className='search-container'>\r\n            <div className='search-input-container'>\r\n              <input\r\n                id='search'\r\n                type='text'\r\n                value={this.state.search}\r\n                onChange={this.getSearch}\r\n                placeholder='Search...'\r\n              />\r\n              <button onClick={this.clearSearch}>Clear</button>\r\n            </div>\r\n            {!this.state.searchEmpty ? (\r\n              <SearchResults\r\n                searchResultsArray={this.state.searchResultsArray}\r\n                following={this.state.following}\r\n                follow={this.follow}\r\n                unfollow={this.unfollow}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className='container'>\r\n            <div className='profile-container'>\r\n              <Profile\r\n                profilePicture={this.state.profilePicture}\r\n                username={this.state.username}\r\n                usernameShort={\r\n                  \"@\" + this.state.username.toLowerCase().replace(/\\s/g, \"\")\r\n                }\r\n                tweetCounter={this.state.tweets.length}\r\n                following={this.state.following}\r\n                unfollow={this.unfollow}\r\n              />\r\n              <div className='uploader'>\r\n                <label htmlFor='file'>Change Picture:</label>{\" \"}\r\n                <Uploader\r\n                  id='file'\r\n                  name='file'\r\n                  data-tabs='file camera'\r\n                  onChange={file => {\r\n                    console.log(\"File changed: \", file);\r\n                    if (file) {\r\n                      file.progress(info =>\r\n                        console.log(\"File progress: \", info.progress)\r\n                      );\r\n                      file.done(info => console.log(\"File uploaded: \", info));\r\n                    }\r\n                  }}\r\n                  onUploadComplete={info => this.uploadPicture(info)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='buttons-and-tweets'>\r\n              <div className='buttons-container'>\r\n                <button\r\n                  className={this.state.home ? \"button --active\" : \"button\"}\r\n                  onClick={() => this.setState({ home: true })}\r\n                >\r\n                  Home\r\n                </button>\r\n                <button\r\n                  className={this.state.home ? \"button\" : \"button --active\"}\r\n                  onClick={() => this.setState({ home: false })}\r\n                >\r\n                  Feed\r\n                </button>\r\n              </div>\r\n              <div className='tweets-container'>\r\n                {this.state.home ? (\r\n                  <div className='post-container'>\r\n                    <input\r\n                      id='post'\r\n                      type='text'\r\n                      value={this.state.tweetValue}\r\n                      onChange={this.handleTweetChange}\r\n                      onKeyDown={this.handleTweetKeyDown}\r\n                    />\r\n                    <label className='post-label' htmlFor='post'>\r\n                      Please enter your tweet and press Enter\r\n                    </label>\r\n                  </div>\r\n                ) : null}\r\n\r\n                {this.state.home ? (\r\n                  <TweetBox\r\n                    tweets={this.state.tweets}\r\n                    timesOfTweets={this.state.timesOfTweets}\r\n                    profilePicture={this.state.profilePicture}\r\n                    usernameShort={\r\n                      \"@\" + this.state.username.toLowerCase().replace(/\\s/g, \"\")\r\n                    }\r\n                    comment={this.comment}\r\n                    owner_id={this.state.owner_id}\r\n                  />\r\n                ) : (\r\n                  <NewTweetBox\r\n                    tweets={this.state.following}\r\n                    comment={this.comment}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}